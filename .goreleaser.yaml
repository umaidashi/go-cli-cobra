# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

# brews:
#   - repository:
#       owner: umaidashi
#       name: homebrew-tap
#       token: "{{ .Env.TAP_GITHUB_TOKEN }}"
#
# .goreleaser.yaml
brews:
  -
    name: go_cobra_cli_task
    alternative_names:
      - myproject@{{ .Version }}
      - myproject@{{ .Major }}
    ids:
      - foo
      - bar
    app: MyApp.app
    goarm: 6
    goamd64: v1
    url_template: "https://github.mycompany.com/foo/bar/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    url_headers:
      - "Accept: application/octet-stream"
      - 'Authorization: bearer #{ENV["HOMEBREW_GITHUB_API_TOKEN"]}'
    download_strategy: CurlDownloadStrategy
    custom_require: custom_download_strategy
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    directory: Formula
    caveats: "How to use this binary"
    homepage: "https://example.com/"
    description: "Software to create fast and easy drum rolls."
    license: "MIT"
    skip_upload: true
    custom_block: |
      head "https://github.com/some/package.git"
    dependencies:
      - name: git
        os: mac
      - name: zsh
        type: optional
      - name: fish
        version: v1.2.3
      - name: elvish
        type: optional
        version: v1.2.3
    conflicts:
      - svn
      - bash
    test: |
      system "#{bin}/foo --version"
    install: |
      bin.install "some_other_name"
      bash_completion.install "completions/foo.bash" => "foo"
    extra_install: |
      bash_completion.install "completions/foo.bash" => "foo"
      man1.install "man/foo.1.gz"
    post_install: |
        etc.install "app-config.conf"
    repository:
      owner: umaidashi
      name: homebrew-tap
      branch: main
      token: "{{ .Env.TAP_GITHUB_TOKEN }}"
      token_type: "github"
      pull_request:
        enabled: true
        draft: true
        check_boxes: true
        base:
          owner: goreleaser
          name: homebrew-tap
          branch: main
      git:
        url: 'ssh://git@myserver.com:repo.git'
        private_key: '{{ .Env.PRIVATE_KEY_PATH }}'
        ssh_command: 'ssh -i {{ .Env.KEY }} -o SomeOption=yes'
